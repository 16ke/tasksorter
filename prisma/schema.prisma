generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"        
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  tasks         Task[]
  categories    Category[]
  hashedPassword String?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Task {
  id          String   @id @default(cuid())
  title       String
  description String?
  status      String   @default("TODO")
  priority    String?
  dueDate     DateTime?
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  categories  TaskCategory[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id          String   @id @default(cuid())
  name        String
  color       String   @default("#3b82f6")
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  tasks       TaskCategory[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([name, userId])
}

model TaskCategory {
  id          String   @id @default(cuid())
  task        Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
  taskId      String
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  String
  createdAt DateTime @default(now())
  @@unique([taskId, categoryId])
}